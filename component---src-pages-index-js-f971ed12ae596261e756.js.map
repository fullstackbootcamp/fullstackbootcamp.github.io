{"version":3,"sources":["webpack:///./src/components/homeSections/Section2.js","webpack:///./src/components/homeSections/Section3.js","webpack:///./src/components/components.js","webpack:///./src/components/homeSections/PoweredBy.js","webpack:///./src/components/homeSections/TopicsOverview.js","webpack:///./src/components/homeSections/BootcampDetails.js","webpack:///./src/pages/index.js"],"names":["AbsoluteContainer","rhythm","ContentContainer","media","Item","ImageContainer","query","backgroundColor","color","responsiveHeight","fixed","icon1","childImageSharp","icon2","icon3","Header","fontSize","ror","react","Container","props","fs","SubjectHeader","MinorSubject","SubjectContainer","Subject","children","CenteredText","Table","Row","Title","Value","Schedules","Schedule","SchedTitle","Desc","Blog","BlogHeader","BlogTitle","BlogDate","BlogIndex","render","data","this","siteTitle","site","siteMetadata","title","posts","allMdx","edges","keywords","Navbar","HeroIntro","Section2","Section3","TopicsOverview","BootcampDetails","ContactSection","PoweredBy","Layout","location","map","node","frontmatter","fields","slug","publish","key","css","boxShadow","textDecoration","transition","to","date","dangerouslySetInnerHTML","__html","excerpt","Footer","React","Component","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-f971ed12ae596261e756.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport styled from '@emotion/styled';\n\nimport { rhythm, scale } from '../../utils/typography';\nimport { SectionHeader, BlackText, WhiteText } from '../typo';\nimport { Container } from '../Components';\n\nimport media from '../../utils/media';\n\nconst AbsoluteContainer = styled.div`\n  color: #fff;\n  font-size: ${rhythm(20)};\n  line-height: ${rhythm(20)};\n  position: absolute;\n  right: -54px;\n  bottom: 0;\n  transform: translateY(44%);\n  z-index: 0;\n`;\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: row wrap;\n\n  ${media(`\n    margin-bottom: 10rem;\n  `)}\n`;\n\nconst Item = styled.div`\n  width: calc(100% / 3);\n  padding: ${rhythm(0.5)};\n\n  ${media(`\n    width: 100%;\n  `)}\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n\n  ${media(`\n    width: fit-content;\n    margin: auto;\n  `)}\n`;\n\nexport default () => {\n  const query = useStaticQuery(graphql`\n    query {\n      icon1: file(absolutePath: { regex: \"/logo_alt.png/\" }) {\n        childImageSharp {\n          fixed(height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      icon2: file(absolutePath: { regex: \"/icon_2.png/\" }) {\n        childImageSharp {\n          fixed(height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      icon3: file(absolutePath: { regex: \"/icon_3.png/\" }) {\n        childImageSharp {\n          fixed(height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Container backgroundColor=\"#cc0000\" color=\"#fff\" responsiveHeight=\"auto\">\n      <SectionHeader color=\"#fff\">\n        What you <BlackText>get</BlackText>.\n      </SectionHeader>\n      <ContentContainer>\n        <Item>\n          <ImageContainer>\n            <Image fixed={query.icon1.childImageSharp.fixed} />\n          </ImageContainer>\n          <WhiteText>\n            A combination of <strong>conceptual</strong> and <strong>practical</strong> training from our team of\n            seasoned Ruby/React Engineers.\n          </WhiteText>\n        </Item>\n        <Item>\n          <ImageContainer>\n            <Image fixed={query.icon2.childImageSharp.fixed} />\n          </ImageContainer>\n          <WhiteText>\n            Any <strong>winning</strong> idea we find worthy can get Php 300k cash + 700k worth of services.\n          </WhiteText>\n        </Item>\n        <Item>\n          <ImageContainer>\n            <Image fixed={query.icon3.childImageSharp.fixed} />\n          </ImageContainer>\n          <WhiteText>An opportunity to work with FullSuite.</WhiteText>\n        </Item>\n      </ContentContainer>\n      <AbsoluteContainer>{'{'}</AbsoluteContainer>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\nimport Image from 'gatsby-image';\n\nimport { SectionHeader, RedText, Lead } from '../typo';\nimport { Container } from '../Components';\nimport { rhythm, scale } from '../../utils/typography';\n\nimport media from '../../utils/media';\n\nconst AbsoluteContainer = styled.div`\n  color: #cc0000;\n  font-size: ${rhythm(20)};\n  line-height: ${rhythm(20)};\n  position: absolute;\n  right: -54px;\n  top: 0;\n  transform: translateY(-56.5%);\n  z-index: 0;\n`;\n\nconst ContentContainer = styled.div`\n  max-width: 900px;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: row wrap;\n`;\n\nconst Item = styled.div`\n  width: calc(100% / 2);\n  padding: ${rhythm(1)};\n\n  ${media(`\n    width: 100%;\n    padding: ${rhythm(1)} 0;\n  `)}\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n\n  ${media(`\n    width: fit-content;\n    margin: auto;\n  `)}\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 1;\n\n  ${media(`\n    margin-top: 10rem;\n  `)}\n`;\n\nexport default () => {\n  const query = useStaticQuery(graphql`\n    query {\n      ror: file(absolutePath: { regex: \"/ruby_on_rails_logo.png/\" }) {\n        childImageSharp {\n          fixed(height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      react: file(absolutePath: { regex: \"/react_js_logo.png/\" }) {\n        childImageSharp {\n          fixed(height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Container>\n      <Header>\n        <SectionHeader>\n          Tech you <RedText>learn</RedText>.\n        </SectionHeader>\n        <Lead fontSize=\"1\">Technology that Silicon Valley loves.</Lead>\n      </Header>\n      <ContentContainer>\n        <Item>\n          <ImageContainer>\n            <Image fixed={query.ror.childImageSharp.fixed} />\n          </ImageContainer>\n          Ruby on Rails is a ruby engine for web which makes creating web apps fast, easy, and scalable. It is one of\n          the most stable platforms with a huge community. Shopify, Github, Airbnb, Twitch, and Square all use Ruby on\n          Rails.\n        </Item>\n        <Item>\n          <ImageContainer>\n            <Image fixed={query.react.childImageSharp.fixed} />\n          </ImageContainer>\n          Built by Facebook, React JS is a javascript library for building highly functional interfaces. It is currently\n          the fastest growing front-end javascript framework.\n        </Item>\n      </ContentContainer>\n      <AbsoluteContainer>{'{'}</AbsoluteContainer>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { rhythm, scale } from '../utils/typography';\n\nimport media from '../utils/media';\n\nexport const Container = styled.div`\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin: 0;\n  padding: ${rhythm(1)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column nowrap;\n  background-color: ${props => props.backgroundColor || '#fff'};\n  color: ${props => props.color || '#000'};\n\n  @media screen and (min-device-width: 320px) and (max-device-width: 820px) {\n    height: ${props => props.responsiveHeight || 'auto'};\n  }\n`;\n\nexport const FluidContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: ${rhythm(2)} ${rhythm(1)};\n  display: flex;\n  flex-flow: column nowrap;\n  background-color: ${props => props.backgroundColor || '#fff'};\n  color: ${props => props.color || '#000'};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { SectionHeader } from '../typo';\nimport { rhythm, scale } from '../../utils/typography';\nimport { Container } from '../components';\n\nconst ImageContainer = styled.div`\n  margin-bottom: ${rhythm(1)};\n`;\n\nexport default () => {\n  const query = useStaticQuery(graphql`\n    query {\n      fs: file(absolutePath: { regex: \"/fullsuite_logo.png/\" }) {\n        childImageSharp {\n          fixed(height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Container responsiveHeight=\"100vh\">\n      <h2>Powered by</h2>\n      <ImageContainer>\n        <Image fixed={query.fs.childImageSharp.fixed} />\n      </ImageContainer>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { FluidContainer } from '../Components';\nimport { SectionHeader, RedText } from '../typo';\nimport { rhythm } from '../../utils/typography';\n\nimport media from '../../utils/media';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst SubjectHeader = styled.h3`\n  ${media(`\n    font-size: ${rhythm(0.65)};\n  `)}\n`;\nconst MinorSubject = styled.h5``;\nconst Description = styled.p``;\nconst SubjectContainer = styled.div`\n  width: calc(50%);\n  padding: ${rhythm(0.25)} ${rhythm(1)};\n\n  &:nth-child(odd) {\n    text-align: right;\n  }\n\n  ${media(`\n    width: 100%;\n    text-align: center;\n\n    &:nth-child(odd) {\n      text-align: center;\n    }\n  `)}\n`;\n\nconst Subject = ({ children }) => (\n  <SubjectHeader>\n    <RedText>{'{'}</RedText> {children} <RedText>}</RedText>\n  </SubjectHeader>\n);\n\nexport default () => (\n  <FluidContainer backgroundColor=\"#000\" color=\"#fff\">\n    <SectionHeader color=\"white\">\n      Topics Overview<RedText>.</RedText>\n    </SectionHeader>\n    <Container>\n      <SubjectContainer>\n        <Subject>Ruby Programming Language</Subject>\n      </SubjectContainer>\n      <SubjectContainer>\n        <Subject>Version Control with Git</Subject>\n      </SubjectContainer>\n      <SubjectContainer>\n        <Subject>Test Driven Development</Subject>\n      </SubjectContainer>\n      <SubjectContainer>\n        <Subject>Best Coding Practices</Subject>\n      </SubjectContainer>\n      <SubjectContainer>\n        <Subject>Ruby on Rails</Subject>\n        <MinorSubject>Scaffolding: The Quick and Dirty Way</MinorSubject>\n        <MinorSubject>Controllers, Views, and Routes</MinorSubject>\n        <MinorSubject>Models</MinorSubject>\n        <MinorSubject>Forms</MinorSubject>\n        <MinorSubject>Front-end Behaviors and styling with Sass</MinorSubject>\n      </SubjectContainer>\n      <SubjectContainer>\n        <Subject>React JS</Subject>\n        <MinorSubject>JSX</MinorSubject>\n        <MinorSubject>Function Components</MinorSubject>\n        <MinorSubject>PropTypes</MinorSubject>\n        <MinorSubject>Class Components</MinorSubject>\n        <MinorSubject>Class Components - Life-cycle Methods</MinorSubject>\n        <MinorSubject>Ajax with Axios</MinorSubject>\n      </SubjectContainer>\n    </Container>\n  </FluidContainer>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { rhythm } from '../../utils/typography';\nimport { FluidContainer } from '../Components';\nimport { SectionHeader, BlackText } from '../typo';\n\nimport media from '../../utils/media';\n\nconst CenteredText = styled.div`\n  text-align: center;\n`;\n\nconst Table = styled.table``;\nconst Row = styled.tr`\n  td {\n    border-bottom: solid 2px rgba(0, 0, 0, 0.1);\n  }\n`;\nconst Title = styled.td`\n  text-align: right;\n  font-weight: 700;\n  width: 30%;\n`;\nconst Value = styled.td`\n  width: 70%;\n`;\n\nconst Schedules = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  max-width: 900px;\n  width: 100%;\n  margin: auto;\n`;\n\nconst Schedule = styled.div`\n  width: 50%;\n  padding: ${rhythm(1)};\n\n  ${media(`\n    width: 100%;\n  `)}\n`;\n\nconst SchedTitle = styled.p`\n  font-weight: 700;\n`;\n\nconst Desc = styled.small`\n  color: #000;\n  font-weight: 300;\n`;\n\nexport default () => (\n  <FluidContainer backgroundColor=\"#cc0000\" color=\"white\">\n    <SectionHeader color=\"white\">\n      Bootcamp Details<BlackText>.</BlackText>\n    </SectionHeader>\n    <CenteredText>\n      <Table>\n        <Row>\n          <Title>Duration</Title>\n          <Value>2 Months</Value>\n        </Row>\n        <Row>\n          <Title>Location</Title>\n          <Value>04 Escoda St., Quezon Hill Rd. 1, Cor. Naguilian Rd., Baguio City</Value>\n        </Row>\n        <Row>\n          <Title>Start Date</Title>\n          <Value>February 1, 2020</Value>\n        </Row>\n      </Table>\n    </CenteredText>\n    <Schedules>\n      <Schedule>\n        <SchedTitle>\n          Camp Proper Schedules\n          <br />\n          <Desc>9am - 6pm on following dates.</Desc>\n        </SchedTitle>\n        <ul>\n          <li>Feb 01, 2020</li>\n          <li>Feb 08, 2020</li>\n          <li>Feb 15, 2020</li>\n          <li>Feb 22, 2020</li>\n          <li>Feb 29, 2020</li>\n          <li>Mar 07, 2020</li>\n          <li>Mar 14, 2020</li>\n          <li>Mar 21, 2020</li>\n          <li>Mar 28, 2020</li>\n        </ul>\n      </Schedule>\n      <Schedule>\n        <SchedTitle>\n          Refresher Sessions Schedules\n          <br />\n          <Desc>7pm - 9pm on following dates.</Desc>\n          <br />\n          <Desc>Attendance is not required.</Desc>\n        </SchedTitle>\n        <ul>\n          <li>Feb 05, 2020</li>\n          <li>Feb 12, 2020</li>\n          <li>Feb 19, 2020</li>\n          <li>Feb 26, 2020</li>\n          <li>Mar 04, 2020</li>\n          <li>Mar 11, 2020</li>\n          <li>Mar 18, 2020</li>\n        </ul>\n      </Schedule>\n    </Schedules>\n  </FluidContainer>\n);\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport HeroIntro from '../components/HeroIntro';\nimport Navbar from '../components/Navbar';\nimport { rhythm } from '../utils/typography';\nimport { RedText } from '../components/typo';\n\nimport Section2 from '../components/homeSections/Section2';\nimport Section3 from '../components/homeSections/Section3';\nimport PoweredBy from '../components/homeSections/PoweredBy';\nimport TopicsOverview from '../components/homeSections/TopicsOverview';\nimport BootcampDetails from '../components/homeSections/BootcampDetails';\nimport ContactSection from '../components/ContactSection';\nimport Footer from '../components/Footer';\nimport { FluidContainer } from '../components/Components';\n\nconst Blog = styled.div`\n  margin-bottom: ${rhythm(1.2)};\n`;\n\nconst BlogHeader = styled.h2`\n  color: #fff;\n`;\nconst BlogTitle = styled.h3`\n  color: #fff;\n  margin-bottom: 0;\n`;\n\nconst BlogDate = styled.small`\n  color: #cc0000;\n  margin-bottom: ${rhythm(1)};\n`;\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMdx.edges;\n\n    return (\n      <>\n        <SEO\n          title=\"FullStack Bootcamp\"\n          keywords={[`fullstack`, `bootcamp`, `ruby`, `ruby on rails`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Navbar />\n        <HeroIntro />\n        <Section2 />\n        <Section3 />\n        <TopicsOverview />\n        <BootcampDetails />\n        <ContactSection />\n        <PoweredBy />\n        <FluidContainer backgroundColor=\"#000\" color=\"#fff\">\n          <Layout location={this.props.location} title={siteTitle}>\n            <BlogHeader>\n              Articles<RedText>.</RedText>\n            </BlogHeader>\n            {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n\n              if (!node.frontmatter.publish) {\n                return null;\n              }\n\n              return (\n                <Blog key={node.fields.slug}>\n                  <BlogTitle>\n                    <Link\n                      css={{\n                        boxShadow: `none`,\n                        color: '#fff',\n                        textDecoration: 'none',\n                        transition: 'all 300ms ease',\n                        '&:hover': { color: '#cc0000' },\n                      }}\n                      to={node.fields.slug}\n                    >\n                      {title}\n                    </Link>\n                  </BlogTitle>\n                  <BlogDate>{node.frontmatter.date}</BlogDate>\n                  <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                </Blog>\n              );\n            })}\n          </Layout>\n          <Footer />\n        </FluidContainer>\n      </>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            publish\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}